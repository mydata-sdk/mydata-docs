swagger: '2.0'
info:
  title: MyData - Account internal API
  description: |
    This API specification describes MyData Account internal API that is used by other MyData Operator components and is not ment to be used from client side. For accesing Mydata functionality from client side see MyData Account External API and MyData Middleware API  
    See [MyData documenttation](https://github.com/mydata-sdk/mydata-docs/tree/master/architecture_specs) for more details.
  version: '2.0'
  contact:
    url: 'https://github.com/mydata-sdk'
  license:
    name: 'MIT License (MIT)'
    url: 'https://opensource.org/licenses/MIT'
host: 127.0.0.1
schemes:
  - https

basePath: '/account/api/v2.0/internal/'

consumes:
  - application/json

produces:
  - application/json

securityDefinitions:
  BasicAuth:
    type: basic
    description: HTTP Basic Auth
    
  apiKeyClient:
    type: apiKey
    name: "Api-Key-Sdk"
    description: "Defines client that is performing operations. Possible clients is Operator's SDK Component"
    in: header

  apiKeyUser:
    type: apiKey
    name: "Api-Key-User"
    description: "Defines user that is performing operations. Possible user's are MyData Account Owner's"
    in: header

externalDocs:
  description: 'External documentation'
  url: 'https://github.com/HIIT/mydata-stack'

paths:
  /auth/sdk/:
    get:
      security:
        - BasicAuth: []
      summary: 'Client Authentication'
      description: 'Authenticate Client to make requests to API'

      tags:
        - Auth

      responses:
        '200':
          description: Clinet API Key
          schema:
            $ref: '#/definitions/apiKeyResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'

  /auth/sdk/account/{account_id}/info/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Verify Account API Key'
      description: 'Verify that API Key belongs to specified user'

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true

      tags:
        - Info

      responses:
        '200':
          description: Account object
          schema:
            $ref: '#/definitions/accountInfo'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'

  /services/{service_id}/surrogates/{surrogate_id}/:
    get:
      security:
        - apiKeyClient: []
      summary: 'Verify Account API Key'
      description: 'Verify that API Key belongs to specified user'

      parameters:
        - name: service_id
          in: path
          type: string
          description: 'Service ID'
          required: true
        - name: surrogate_id
          in: path
          type: string
          description: 'Surrogate ID'
          required: true

      tags:
        - Info

      responses:
        '200':
          description: Surrogate object
          schema:
            $ref: '#/definitions/surrogate'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/servicelinks/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'List Service Link Records'
      description: "Fetch list of Service Link Records"

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true

      tags:
        - Service Linking - Fetch

      responses:
        '200':
          description: 'Array of Service Link Records'
          schema:
            $ref: '#/definitions/ServiceLinkArray'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/servicelinks/init/sink/:
    post:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Init Service Linking - Sink'
      description: "Stores Service Link ID to Account with PoP Key."

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: payload
          in: body
          description: 'Service Link ID and Services PoP Key'
          required: true
          schema:
            $ref: '#/definitions/SinkServiceLinkInit'

      tags:
        - Service Linking - Create

      responses:
        '201':
          description: 'Service Link ID stored'
          schema:
            $ref: '#/definitions/ServiceLinkInitResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '409':
          description: 'Entry already exists'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'

  /accounts/{account_id}/servicelinks/init/source/:
    post:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Init Service Linking - Source'
      description: "Stores Service Link ID to Account"

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: payload
          in: body
          description: 'Service Link ID and Services PoP Key'
          required: true
          schema:
            $ref: '#/definitions/SourceServiceLinkInit'

      tags:
        - Service Linking - Create

      responses:
        '201':
          description: 'Service Link ID stored'
          schema:
            $ref: '#/definitions/ServiceLinkInitResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '409':
          description: 'Entry already exists'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/servicelinks/{link_id}/:
    patch:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Sign Service Link'
      description: "Signs constructed Service Link Record with Account owner's key."

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true
        - name: payload
          in: body
          description: 'Payload for Service Link Record'
          required: true
          schema:
            $ref: '#/definitions/newServiceLinkRequest'

      tags:
        - Service Linking - Create

      responses:
        '201':
          description: 'Service Link Record and Service Link Status Record created'
          schema:
            $ref: '#/definitions/newServiceLinkResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '409':
          description: 'Entry already exists'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Service Link Record'
      description: "Fetch Service Link Record by Service Link ID"

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true

      tags:
        - Service Linking - Fetch

      responses:
        '200':
          description: 'Service Link Record'
          schema:
            $ref: '#/definitions/ServiceLinkResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/servicelinks/{link_id}/store/:
    post:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Store Service Link Record'
      description: "Verifies the integrity of provided Service Link Record. If verification passes Service Link Status Record is constructed and signed with Account owner's key. Finally both records are stored."

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: payload
          in: body
          description: 'Payloads for Service Link Record and Service Link Status Record'
          required: true
          schema:
            $ref: '#/definitions/storeSlRequest'

      tags:
        - Service Linking - Create

      responses:
        '200':
          description: 'Service Link Record and Service Link Status Record created'
          schema:
            $ref: '#/definitions/storeSlrResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '409':
          description: 'Entry already exists'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/servicelinks/{link_id}/statuses/:
    post:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Issue Service Link Status Change'
      description: "Constructs Service Link Status Record based on provided Service Link Status Record payload. Signs constructed Service Link Status Record with Account owner's key. Finally Service Link Status Record is stored."

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true
        - name: payload
          in: body
          description: "Payload for Service Link Status Record to sign by Account Owner."
          required: true
          schema:
            $ref: '#/definitions/newServiceLinkStatusRequest'

      tags:
        - Service Linking - Create

      responses:
        '201':
          description: 'Service Link Status Record created'
          schema:
            $ref: '#/definitions/ServiceLinkStatusResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '409':
          description: 'Entry already exists'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Service Link Status Records'
      description: "Fetch list of Service Link Status Records"

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true
        - name: status_id
          in: query
          type: string
          description: "Last valid Service Link Status Record ID"
          required: false

      tags:
        - Service Linking - Fetch

      responses:
        '200':
          description: 'Array of Service Link Status Records'
          schema:
            $ref: '#/definitions/ServiceLinkStatusArray'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/servicelinks/{link_id}/statuses/signed/:
    post:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Store signed Service Link Status Record'
      description: "Stores Service Link Status Record signed by Operator."

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true
        - name: payload
          in: body
          description: "Service Link Status Record signed by Operator."
          required: true
          schema:
            $ref: '#/definitions/newServiceLinkStatusSignedRequest'

      tags:
        - Service Linking - Create

      responses:
        '201':
          description: 'Service Link Status Record created'
          schema:
            $ref: '#/definitions/ServiceLinkStatusResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '409':
          description: 'Entry already exists'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/servicelinks/{link_id}/statuses/{status_id}/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Service Link Status'
      description: "Fetch Service Link Status Record by ID"

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true
        - name: status_id
          in: path
          type: string
          description: 'Service Link Status ID'
          required: true

      tags:
        - Service Linking - Fetch

      responses:
        '200':
          description: 'Service Link Status Record'
          schema:
            $ref: '#/definitions/ServiceLinkStatusResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/servicelinks/{link_id}/statuses/last/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get last Service Link Status Record'
      description: "Fetch last Service Link Status Record"

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true

      tags:
        - Service Linking - Fetch

      responses:
        '200':
          description: 'Service Link Status Record'
          schema:
            $ref: '#/definitions/ServiceLinkStatusResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No Service Link with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/servicelinks/{source_link_id}/{sink_link_id}/consents/:
    post:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Give Consent'
      description: "Constructs Consent Record's and Consent Status Record's based on provided payloads for Source and Sink services. Signs constructed record's with Account owner's key. After signing records are stored."

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: source_link_id
          in: path
          type: string
          description: 'Service link record ID of Source service'
          required: true
        - name: sink_link_id
          in: path
          type: string
          description: 'Service Link Record ID of Sink Service'
          required: true
        - name: consent_data
          in: body
          description: 'Consent Record and Consent Status Record payloads'
          required: true
          schema:
            $ref: '#/definitions/newConsentRequest'

      tags:
        - Consenting - Create

      responses:
        '201':
          description: 'Consent Record and Consent Status Record created and stored'
          schema:
            $ref: '#/definitions/newConsentResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/servicelinks/{link_id}/consents/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Consent Records'
      description: "List Consent Records related to Service Link Record"
      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true
        - name: get_consent_pair
          in: query
          type: boolean
          description: "If true also Consent pairs will be fetched"
          required: false

      tags:
        - Consenting - Fetch

      responses:
        '200':
          description: 'Array of Consent Records'
          schema:
            $ref: '#/definitions/ConsentArray'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No Service Link with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/servicelinks/{link_id}/consents/{consent_id}/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Consent Record'
      description: "Fetch Consent Record related to Service Link Record"

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true
        - name: consent_id
          in: path
          type: string
          description: 'Consent ID'
          required: true
        - name: get_consent_pair
          in: query
          type: boolean
          description: "If true also Consent pairs will be fetched"
          required: false

      tags:
        - Consenting - Fetch

      responses:
        '200':
          description: 'Array of Consent Records'
          schema:
            $ref: '#/definitions/ConsentArray'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No Service Link with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/servicelinks/{link_id}/consents/last/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Last Consent Record'
      description: "Fetch Last Consent Record related to Service Link Record"

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true
        - name: get_consent_pair
          in: query
          type: boolean
          description: "If true also Consent pairs will be fetched"
          required: false

      tags:
        - Consenting - Fetch

      responses:
        '200':
          description: 'Array of Consent Records'
          schema:
            $ref: '#/definitions/ConsentArray'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No Service Link with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/servicelinks/{link_id}/consents/{consent_id}/statuses/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Consent Status Records'
      description: "Fetch list of Consent Status Records"

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true
        - name: consent_id
          in: path
          type: string
          description: 'Consent ID'
          required: true
        - name: status_id
          in: query
          type: string
          description: "Last valid Consent Status Record ID"
          required: false

      tags:
        - Consenting - Fetch

      responses:
        '200':
          description: 'Array of Consent Status Records'
          schema:
            $ref: '#/definitions/ConsentStatusArray'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/servicelinks/{link_id}/consents/{consent_id}/statuses/{status_id}/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Consent Status Record'
      description: "Fetch Consent Status Record by ID"

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true
        - name: consent_id
          in: path
          type: string
          description: 'Consent ID'
          required: true
        - name: status_id
          in: path
          type: string
          description: 'Consent Status ID'
          required: true

      tags:
        - Consenting - Fetch

      responses:
        '200':
          description: 'Consent Status Record'
          schema:
            $ref: '#/definitions/ConsentStatusResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/servicelinks/{link_id}/consents/{consent_id}/statuses/last/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get last Consent Status Record'
      description: "Fetch last Consent Status Record"

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true
        - name: consent_id
          in: path
          type: string
          description: 'Consent ID'
          required: true

      tags:
        - Consenting - Fetch

      responses:
        '200':
          description: 'Consent Status Record'
          schema:
            $ref: '#/definitions/ConsentStatusResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'



  /accounts/{account_id}/consents/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Consent Records'
      description: "Fetch list of Consent Records related to Account"

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: status_id
          in: query
          type: string
          description: "Last valid Consent Status Record ID"
          required: false
        - name: get_consent_pair
          in: query
          type: boolean
          description: "If true also Consent pairs will be fetched"
          required: false

      tags:
        - Consenting - Fetch

      responses:
        '200':
          description: 'Array of Consent Records'
          schema:
            $ref: '#/definitions/ConsentArray'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/consents/{consent_id}/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Consent Record'
      description: "Fetch Consent Record by ID"

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: consent_id
          in: path
          type: string
          description: 'Consent ID'
          required: true
        - name: get_consent_pair
          in: query
          type: boolean
          description: "If true also Consent pairs will be fetched"
          required: false

      tags:
        - Consenting - Fetch

      responses:
        '200':
          description: 'Consent Record'
          schema:
            $ref: '#/definitions/ConsentArray'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No Service Link with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/consents/{consent_id}/statuses/:
    post:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Issue Consent Status change'
      description: "Constructs Consent Status Record based on provided Consent Status Record payload. Signs constructed Consent Status Record with Account owner's key. Finally Consent Status Record is stored."

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: consent_id
          in: path
          type: string
          description: 'Consent ID'
          required: true
        - name: payload
          in: body
          description: "Payload for Consent Status Record to sign by Account Owner. If 'operatorSigned' query parameter is false, this parameter is required."
          required: true
          schema:
            $ref: '#/definitions/newConsentStatusRequest'

      tags:
        - Consenting - Create

      responses:
        '201':
          description: 'Consent Status Record created'
          schema:
            $ref: '#/definitions/ConsentStatusResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '409':
          description: 'Entry already exists'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Consent Status Records'
      description: "Fetch list of Consent Status Records"

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: consent_id
          in: path
          type: string
          description: 'Consent ID'
          required: true
        - name: status_id
          in: query
          type: string
          description: "Last valid Consent Status Record ID"
          required: false

      tags:
        - Consenting - Fetch

      responses:
        '200':
          description: 'Array of Consent Status Records'
          schema:
            $ref: '#/definitions/ConsentStatusArray'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/consents/{consent_id}/statuses/signed/:
    post:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Store signed Consent Status Record'
      description: "Stores Consent Status Record signed by Operator."

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: consent_id
          in: path
          type: string
          description: 'Consent ID'
          required: true
        - name: payload
          in: body
          description: "Consent Status Record signed by Operator"
          required: true
          schema:
            $ref: '#/definitions/newConsentStatusSignedRequest'

      tags:
        - Consenting - Create

      responses:
        '201':
          description: 'Consent Status Record created'
          schema:
            $ref: '#/definitions/ConsentStatusResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '409':
          description: 'Entry already exists'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/consents/{consent_id}/statuses/{status_id}/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Consent Status Record'
      description: "Fetch Consent Status Record by ID"

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: consent_id
          in: path
          type: string
          description: 'Consent ID'
          required: true
        - name: status_id
          in: path
          type: string
          description: 'Consent Status ID'
          required: true

      tags:
        - Consenting - Fetch

      responses:
        '200':
          description: 'Consent Status Record'
          schema:
            $ref: '#/definitions/ConsentStatusResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /accounts/{account_id}/consents/{consent_id}/statuses/last/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get last Consent Status Record'
      description: "Fetch last Consent Status Record"

      parameters:
        - name: account_id
          in: path
          type: string
          description: 'Account ID'
          required: true
        - name: consent_id
          in: path
          type: string
          description: 'Consent ID'
          required: true

      tags:
        - Consenting - Fetch

      responses:
        '200':
          description: 'Consent Status Record'
          schema:
            $ref: '#/definitions/ConsentStatusResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /consents/{consent_id}/authorisationtoken/:
    get:
      security:
        - apiKeyClient: []
      summary: 'Data for Authorisation token'
      description: "Fetch data needed to construct Authorisation token."
      parameters:
        - name: consent_id
          in: path
          type: string
          description: "Consent Record ID of Sink Service"
          required: true

      tags:
        - Data Connection

      responses:
        '200':
          description: 'Base data for Authorisation token'
          schema:
            $ref: '#/definitions/AuthorisationTokenResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /services/{service_id}/servicelinks/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Service Link Records'
      description: "Fetch list of Service Link Records related to Service"

      parameters:
        - name: service_id
          in: path
          type: string
          description: 'Service ID'
          required: true
        - name: surrogate_id
          in: query
          type: string
          description: 'Filter by Surrogate ID'
          required: false
        - name: account_id
          in: query
          type: string
          description: 'Filter by Surrogate ID'
          required: false

      tags:
        - Service Linking - Fetch

      responses:
        '200':
          description: 'Array of Service Link Records'
          schema:
            $ref: '#/definitions/ServiceLinkArray'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /services/{service_id}/servicelinks/{link_id}/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Service Link Record'
      description: "Fetch Service Link Record related to Service"

      parameters:
        - name: service_id
          in: path
          type: string
          description: 'Service ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true

      tags:
        - Service Linking - Fetch

      responses:
        '200':
          description: 'Array of Service Link Records'
          schema:
            $ref: '#/definitions/ServiceLinkResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /services/{service_id}/servicelinks/{link_id}/consents/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Consent Records'
      description: "Fetch list of Consent Records related to Service Service Link Record"

      parameters:
        - name: service_id
          in: path
          type: string
          description: 'Service ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true

      tags:
        - Consenting - Fetch

      responses:
        '200':
          description: 'Array of Consent Records'
          schema:
            $ref: '#/definitions/ConsentArray'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /services/{service_id}/servicelinks/{link_id}/consents/{consent_id}/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Consent Record'
      description: "Consent Record related to Service Link and Service"

      parameters:
        - name: service_id
          in: path
          type: string
          description: 'Service ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true
        - name: consent_id
          in: path
          type: string
          description: 'Consent ID'
          required: true

      tags:
        - Consenting - Fetch

      responses:
        '200':
          description: 'Array of Consent Records'
          schema:
            $ref: '#/definitions/ConsentResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /services/{service_id}/servicelinks/{link_id}/consents/{consent_id}/statuses/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Consent Status Records'
      description: "Fetch list of Consent Status Records"

      parameters:
        - name: service_id
          in: path
          type: string
          description: 'Service ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true
        - name: consent_id
          in: path
          type: string
          description: 'Consent ID'
          required: true
        - name: status_id
          in: query
          type: string
          description: "Last valid Consent Status Record ID"
          required: false

      tags:
        - Consenting - Fetch

      responses:
        '200':
          description: 'Array of Consent Status Records'
          schema:
            $ref: '#/definitions/ConsentStatusArray'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /services/{service_id}/servicelinks/{link_id}/consents/{consent_id}/statuses/{status_id}/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get Consent Status Record'
      description: "Fetch Consent Status Record by ID"

      parameters:
        - name: service_id
          in: path
          type: string
          description: 'Service ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true
        - name: consent_id
          in: path
          type: string
          description: 'Consent ID'
          required: true
        - name: status_id
          in: path
          type: string
          description: 'Consent Status ID'
          required: true

      tags:
        - Consenting - Fetch

      responses:
        '200':
          description: 'Consent Status Record'
          schema:
            $ref: '#/definitions/ConsentStatusResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'


  /services/{service_id}/servicelinks/{link_id}/consents/{consent_id}/statuses/last/:
    get:
      security:
        - apiKeyClient: []
        - apiKeyUser: []
      summary: 'Get last Consent Status Record'
      description: "Fetch last Consent Status Record"

      parameters:
        - name: service_id
          in: path
          type: string
          description: 'Service ID'
          required: true
        - name: link_id
          in: path
          type: string
          description: 'Service Link ID'
          required: true
        - name: consent_id
          in: path
          type: string
          description: 'Consent ID'
          required: true

      tags:
        - Consenting - Fetch

      responses:
        '200':
          description: 'Consent Status Record'
          schema:
            $ref: '#/definitions/ConsentStatusResponse'
        '400':
          description: 'Bad Request'
          schema:
            $ref: '#/definitions/error'
        '404':
          description: 'No entry with provided ID'
          schema:
            $ref: '#/definitions/error'
        '500':
          description: 'General Error'
          schema:
            $ref: '#/definitions/error'




definitions:

  surrogate:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            type: string
            description: Resource type 'Surrogate'
          id:
            type: string
            description: Surrogate ID
          attributes:
            type: object
            properties:
              account_id:
                type: integer
                description: "Account ID"
              service_id:
                type: string
                description: "Service ID"

  accountInfo:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            type: string
            description: Resource type 'Account'
          id:
            type: integer
            description: Account ID
          attributes:
            type: object

  jwk:
    type: object
    description: "Cryptographic key presented as JSON Web Key (JWK) as defined in RFC 7517"

  JWSUnprotectedHeader:
    type: object
    description: "JWS Unprotected Header"
    properties:
      kid:
        type: string
        description: "Key identifier"

  JWSProtectedHeader:
    type: string
    description: 'JWS Protected Header'

  error:
    type: object
    properties:
      status:
        type: string
        description: HTTP status code as string value.
      code:
        type: integer
        description: HTTP status code
      title:
        type: string
        description: Title of error message.
      detail:
        type: string
        description: Detailed error message.
      source:
        type: string
        description: Source URI

  apiKeyResponse:
    type: object
    properties:
      Api-Key:
        type: string
        description: ApiKey

  SinkServiceLinkInit:
    type: object
    properties:
      code:
        type: string
        description: 'Code'
      data:
        type: object
        properties:
          attributes:
            type: object
            properties:
              slr_id:
                type: string
                description: 'Service Link ID'
              pop_key:
                $ref: '#/definitions/jwk'

  SourceServiceLinkInit:
    type: object
    properties:
      code:
        type: string
        description: 'Code'
      data:
        type: object
        properties:
          attributes:
            type: object
            properties:
              slr_id:
                type: string
                description: 'Service Link ID'

  ServiceLinkInitResponse:
    type: object
    properties:
      code:
        type: string
        description: 'Code'
      data:
        type: object
        properties:
          attributes:
            type: object
            properties:
              slr_id:
                type: string
                description: 'Service Link ID'


  newSlr:
    type: object
    properties:
      type:
        type: string
        description: "Resource type: 'ServiceLinkRecord'"
      attributes:
        type: object
        description: 'Partial Payload for Service Link Record'
        properties:
          version:
            type: string
          link_id:
            type: string
          operator_id:
            type: string
          service_id:
            type: string
          surrogate_id:
            type: string
          operator_key:
            $ref: '#/definitions/jwk'
          iat:
            type: integer
            format: int32

  Slr:
    type: object
    properties:
      type:
        type: string
        description: "Resource type: 'ServiceLinkRecord'"
      id:
        type: string
        description: "ID of resource"
      attributes:
        type: object
        description: 'Service Link Record as JSON Web Signature (JWS)'
        properties:
          header:
            $ref: '#/definitions/JWSUnprotectedHeader'
          protected:
            $ref: '#/definitions/JWSProtectedHeader'
          payload:
            type: object
            description: 'JWS Payload. Base64url encoded.'
            properties:
              version:
                type: string
              link_id:
                type: string
              operator_id:
                type: string
              service_id:
                type: string
              surrogate_id:
                type: string
              operator_key:
                $ref: '#/definitions/jwk'
              cr_keys:
                description: 'JSON Web Key (JWK) Set Structure '
                type: array
                items:
                  $ref: '#/definitions/jwk'
              iat:
                type: integer
                format: int32
          signature:
            type: string
            description: "JWS Signature"


  SlrDoubleSigned:
    type: object
    properties:
      type:
        type: string
        description: "Resource type: 'ServiceLinkRecord'"
      id:
        type: string
        description: "ID of resource"
      attributes:
        type: object
        description: 'Service Link Record as JSON Web Signature (JWS)'
        properties:
          payload:
            type: object
            description: 'JWS Payload. Base64url encoded.'
            properties:
              version:
                type: string
              link_id:
                type: string
              operator_id:
                type: string
              service_id:
                type: string
              surrogate_id:
                type: string
              operator_key:
                $ref: '#/definitions/jwk'
              cr_keys:
                description: 'JSON Web Key (JWK) Set Structure '
                type: array
                items:
                  $ref: '#/definitions/jwk'
              iat:
                type: integer
                format: int32
          signatures:
            type: array
            items:
              type: object
              properties:
                header:
                  $ref: '#/definitions/JWSUnprotectedHeader'
                protected:
                  $ref: '#/definitions/JWSProtectedHeader'
                signature:
                  type: string
                  description: "JWS Signature"

  newSsr:
    type: object
    properties:
      type:
        type: string
        description: "Resource type: 'ServiceLinkStatusRecord'"
      attributes:
        type: object
        description: 'Partial Payload for Service Link Record'
        properties:
          version:
            type: string
          record_id:
            type: string
          surrogate_id:
            type: string
          slr_id:
            type: string
          sl_status:
            type: string
          iat:
            type: integer
            format: int32
          prev_record_id:
            type: string

  Ssr:
    type: object
    properties:
      type:
        type: string
        description: "Resource type: 'ServiceLinkStatusRecord'"
      id:
        type: string
        description: "ID of resource"
      attributes:
        type: object
        description: 'Service Link Status Record as JSON Web Signature (JWS)'
        properties:
          header:
            $ref: '#/definitions/JWSUnprotectedHeader'
          protected:
            $ref: '#/definitions/JWSProtectedHeader'
          payload:
            type: object
            description: 'JWS Payload. Base64url encoded.'
            properties:
              version:
                type: string
              record_id:
                type: string
              surrogate_id:
                type: string
              slr_id:
                type: string
              sl_status:
                type: string
              iat:
                type: integer
                format: int32
              prev_record_id:
                type: string
          signature:
            type: string
            description: "JWS Signature"

  newServiceLinkRequest:
    type: object
    properties:
      code:
        type: string
        description: 'Code'
      data:
        $ref: '#/definitions/newSlr'

  newServiceLinkResponse:
    type: object
    properties:
      code:
        type: string
        description: 'Code'
      data:
        $ref: '#/definitions/Slr'

  ServiceLinkResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/SlrDoubleSigned'

  ServiceLinkArray:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/SlrDoubleSigned'

  newServiceLinkStatusRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/newSsr'

  newServiceLinkStatusSignedRequest:
    type: object
    properties:
      data:
        type: object
        properties:
          ssr:
            $ref: '#/definitions/Ssr'
          ssr_payload:
            type: object
            properties:
              attributes:
                type: object
                properties:
                  version:
                    type: string
                  record_id:
                    type: string
                  surrogate_id:
                    type: string
                  slr_id:
                    type: string
                  sl_status:
                    type: string
                  iat:
                    type: integer
                    format: int32
                  prev_record_id:
                    type: string

  ServiceLinkStatusResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Ssr'

  ServiceLinkStatusArray:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Ssr'

  storeSlRequest:
    type: object
    properties:
      code:
        type: string
        description: 'Code'
      data:
        type: object
        properties:
          slr:
              $ref: '#/definitions/SlrDoubleSigned'
          ssr:
            $ref: '#/definitions/newSsr'

  storeSlrResponse:
    type: object
    properties:
      code:
        type: string
        description: 'Code'
      data:
        type: object
        properties:
          slr:
              $ref: '#/definitions/SlrDoubleSigned'
          ssr:
            $ref: '#/definitions/Ssr'


  consentPayloadSource:
    type: object
    description: 'Payload for Consent Record'
    properties:
      common_part:
        type: object
        properties:
          version:
            type: string
          cr_id:
            type: string
          surrogate_id:
            type: string
          slr_id:
            type: string
          service_description_version:
            type: string
          consent_proposal:
            type: object
            properties:
              url:
                type: string
              hash:
                type: string
          operator:
            type: string
          subject_id:
            type: string
          role:
            type: string
          iat:
            type: integer
            format: int32
          nbf:
            type: integer
            format: int32
          exp:
            type: integer
            format: int32
          rs_description:
            type: object
            properties:
              resource_set:
                type: object
                properties:
                  rs_id:
                    type: string
                  dataset:
                    type: array
                    items:
                      type: object
                      properties:
                        dataset_id:
                          type: string
                        distribution_id:
                          type: string
                        distribution_url:
                          type: string
      role_specific_part:
        type: object
        properties:
          pop_key:
            $ref: '#/definitions/jwk'
          token_issuer_key:
            $ref: '#/definitions/jwk'

  consentPayloadSink:
    type: object
    description: 'Payload for Consent Record'
    properties:
      common_part:
        type: object
        properties:
          version:
            type: string
          cr_id:
            type: string
          surrogate_id:
            type: string
          slr_id:
            type: string
          service_description_version:
            type: string
          consent_proposal:
            type: object
            properties:
              url:
                type: string
              hash:
                type: string            
          operator:
            type: string
          subject_id:
            type: string
          role:
            type: string
          iat:
            type: integer
            format: int32
          nbf:
            type: integer
            format: int32
          exp:
            type: integer
            format: int32
          rs_description:
            type: object
            properties:
              resource_set:
                type: object
                properties:
                  rs_id:
                    type: string
                  dataset:
                    type: array
                    items:
                      type: object
                      properties:
                        dataset_id:
                          type: string
                        distribution_id:
                          type: string
                        distribution_url:
                          type: string
      role_specific_part:
        type: object
        properties:
          source_cr_id:
            type: string
          usage_rules:
            type: array
            items:
              type: object
              properties:
                purposeId:
                  type: string
                datasets:
                  type: array
                  items: 
                    type: string

  newConsentSource:
    type: object
    properties:
      type:
        type: string
        description: "Resource type: 'ConsentRecord'"
      attributes:
        $ref: '#/definitions/consentPayloadSource'


  consentStatusPayload:
    type: object
    description: 'Consent Status Record Payload'
    properties:
      version:
        type: string
      record_id:
        type: string
      surrogate_id:
        type: string
      cr_id:
        type: string
      consent_status:
        type: string
      iat:
        type: integer
        format: int32
      prev_record_id:
        type: string

  newConsentSink:
    type: object
    properties:
      type:
        type: string
        description: "Resource type: 'ConsentRecord'"
      attributes:
        $ref: '#/definitions/consentPayloadSink'

  newConsentStatus:
    type: object
    properties:
      type:
        type: string
        description: "Resource type: 'ConsentStatusRecord'"
      attributes:
        $ref: '#/definitions/consentStatusPayload'

  ConsentRecordSource:
    type: object
    properties:
      type:
        type: string
        description: "Resource type: 'ConsentRecord'"
      id:
        type: string
        description: "ID of resource"
      attributes:
        type: object
        description: 'Consent Record as JSON Web Signature (JWS)'
        properties:
          header:
            $ref: '#/definitions/JWSUnprotectedHeader'
          protected:
            $ref: '#/definitions/JWSProtectedHeader'
          payload:
            $ref: '#/definitions/consentPayloadSource'
          signature:
            type: string
            description: "JWS Signature"

  ConsentRecordSink:
    type: object
    properties:
      type:
        type: string
        description: "Resource type: 'ConsentRecord'"
      id:
        type: string
        description: "ID of resource"
      attributes:
        type: object
        description: 'Consent Record as JSON Web Signature (JWS)'
        properties:
          header:
            $ref: '#/definitions/JWSUnprotectedHeader'
          protected:
            $ref: '#/definitions/JWSProtectedHeader'
          payload:
            $ref: '#/definitions/consentPayloadSink'
          signature:
            type: string
            description: "JWS Signature"

  ConsentRecordGeneral:
    type: object
    properties:
      type:
        type: string
        description: "Resource type: 'ConsentRecord'"
      id:
        type: string
        description: "ID of resource"
      attributes:
        type: object
        description: 'Consent Record as JSON Web Signature (JWS)'
        properties:
          header:
            $ref: '#/definitions/JWSUnprotectedHeader'
          protected:
            $ref: '#/definitions/JWSProtectedHeader'
          payload:
            type: 'object'
            description: 'Base64 encoded object containing either consentPayloadSource or consentPayloadSink object. For detailed descriptions of these objects check Models section.'
          signature:
            type: string
            description: "JWS Signature"


  ConsentStatusRecord:
    type: object
    properties:
      type:
        type: string
        description: "Resource type: 'ConsentStatusRecord'"
      id:
        type: string
        description: "ID of resource"
      attributes:
        type: object
        description: 'Consent Status Record as JSON Web Signature (JWS)'
        properties:
          header:
            $ref: '#/definitions/JWSUnprotectedHeader'
          protected:
            $ref: '#/definitions/JWSProtectedHeader'
          payload:
            $ref: '#/definitions/consentStatusPayload'
          signature:
            type: string
            description: "JWS Signature"

  newConsentRequest:
    type: object
    properties:
      data:
        type: object
        properties:
          source:
            type: object
            properties:
              consent_record_payload:
                  $ref: '#/definitions/newConsentSource'
              consent_status_record_payload:
                $ref: '#/definitions/newConsentStatus'
          sink:
            type: object
            properties:
              consent_record_payload:
                  $ref: '#/definitions/newConsentSink'
              consent_status_record_payload:
                $ref: '#/definitions/newConsentStatus'

  newConsentResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          source:
            type: object
            properties:
              consent_record:
                  $ref: '#/definitions/ConsentRecordSource'
              consent_status_record:
                $ref: '#/definitions/ConsentStatusRecord'
          sink:
            type: object
            properties:
              consent_record:
                  $ref: '#/definitions/ConsentRecordSink'
              consent_status_record:
                $ref: '#/definitions/ConsentStatusRecord'

  ConsentResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/ConsentRecordGeneral'

  ConsentArray:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/ConsentRecordGeneral'

  newConsentStatusRequest:
    type: object
    properties:
      data:
        $ref: '#/definitions/newConsentStatus'

  newConsentStatusSignedRequest:
    type: object
    properties:
      data:
        type: object
        properties:
          csr:
            $ref: '#/definitions/ConsentStatusRecord'
          csr_payload:
            type: object
            properties:
              attributes:
                type: object
                properties:
                  version:
                    type: string
                  record_id:
                    type: string
                  surrogate_id:
                    type: string
                  cr_id:
                    type: string
                  consent_status:
                    type: string
                  iat:
                    type: integer
                    format: int32
                  prev_record_id:
                    type: string

  ConsentStatusResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/ConsentStatusRecord'

  ConsentStatusArray:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/ConsentStatusRecord'

  AuthorisationTokenResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          consent_record:
              $ref: '#/definitions/ConsentRecordSource'
          service_link_record:
              $ref: '#/definitions/SlrDoubleSigned'